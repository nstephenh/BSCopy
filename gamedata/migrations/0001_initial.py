# Generated by Django 5.1.2 on 2024-11-25 21:27

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RawPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_page_number', models.PositiveIntegerField()),
                ('actual_page_number', models.PositiveIntegerField(blank=True, null=True)),
                ('raw_text', models.TextField(blank=True, null=True)),
                ('cleaned_text', models.TextField(blank=True, null=True)),
                ('rules_text', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ForceOrg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameEdition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('edition_name', models.CharField(blank=True, max_length=100, null=True)),
                ('release_year', models.PositiveIntegerField()),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.game')),
            ],
        ),
        migrations.CreateModel(
            name='GameMod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.gameedition')),
            ],
        ),
        migrations.CreateModel(
            name='GameProfileType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.game')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameCharacteristicType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('abbreviation', models.CharField(max_length=10)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.game')),
                ('profile_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.gameprofiletype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('publication_year', models.PositiveIntegerField(blank=True, null=True)),
                ('publication_date', models.DateField(blank=True, null=True)),
                ('edition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.gameedition')),
                ('publisher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.publisher')),
            ],
        ),
        migrations.CreateModel(
            name='PublishedDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=10)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('release_year', models.PositiveSmallIntegerField(blank=True, help_text='If exact release date is not known', null=True)),
                ('release_month', models.PositiveSmallIntegerField(blank=True, help_text='If exact release date is not known', null=True)),
                ('sort_date', models.DateField(blank=True, null=True)),
                ('publication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='gamedata.publication')),
            ],
        ),
        migrations.CreateModel(
            name='PublishedProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profile_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.gameprofiletype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProfileCharacteristic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value_text', models.TextField(blank=True, null=True)),
                ('characteristic_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.gamecharacteristictype')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='characteristics', to='gamedata.publishedprofile')),
            ],
        ),
        migrations.CreateModel(
            name='PublishedUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('max', models.IntegerField(blank=True, null=True)),
                ('force_org', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gamedata.forceorg')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Miniature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='model', to='gamedata.publishedprofile')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='gamedata.publishedunit')),
            ],
        ),
        migrations.CreateModel(
            name='RawText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('text', models.TextField(blank=True, null=True)),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subheadings', to='gamedata.publishedunit')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='texts', to='gamedata.rawpage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='rawpage',
            name='document',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='gamedata.publisheddocument'),
        ),
        migrations.AddField(
            model_name='publishedunit',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.rawpage'),
        ),
        migrations.AddField(
            model_name='publishedprofile',
            name='page',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.rawpage'),
        ),
        migrations.CreateModel(
            name='SpecialRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('text', models.TextField(blank=True, null=True)),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamedata.rawpage')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RawErrata',
            fields=[
                ('rawtext_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='gamedata.rawtext')),
                ('target_page', models.CharField(max_length=13)),
                ('target_docs', models.ManyToManyField(related_name='Errata', to='gamedata.publisheddocument')),
            ],
            options={
                'abstract': False,
            },
            bases=('gamedata.rawtext',),
        ),
    ]
